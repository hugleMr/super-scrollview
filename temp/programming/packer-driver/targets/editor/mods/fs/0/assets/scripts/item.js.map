{"version":3,"sources":["file:///Users/stevejobs/Documents/GitHub/super-scrollview/assets/scripts/item.ts"],"names":["_decorator","Component","Label","EditBox","Size","ccclass","property","Item","transform","node","_uiProps","uiTransformComp","onLoad","input","placeholder","height","toString","show","data","index","callback","label","string","message","clickFunc","onClick","call","onInput","isNaN","Number","setContentSize","contentSize","width"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,O,OAAAA,O;AAASC,MAAAA,I,OAAAA,I;;;;;;;OAChD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;sBAGjBO,I,WADZF,OAAO,CAAC,MAAD,C,UAEHC,QAAQ,CAACJ,KAAD,C,UACRI,QAAQ,CAACH,OAAD,C,oCAHb,MACaI,IADb,SAC0BN,SAD1B,CACoC;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAKnB,YAATO,SAAS,GAAG;AACZ,iBAAO,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,eAA1B;AACH;;AACDC,QAAAA,MAAM,GAAE;AAAA;;AACJ,eAAKC,KAAL,CAAWC,WAAX,sBAAyB,KAAKN,SAA9B,oDAAyB,gBAAgBO,MAAhB,CAAuBC,QAAvB,EAAzB;AACH;;AACDC,QAAAA,IAAI,CAACC,IAAD,EAAYC,KAAZ,EAA2BC,QAA3B,EAA+C;AAC/C,eAAKD,KAAL,GAAaA,KAAb;AACA,eAAKE,KAAL,CAAWC,MAAX,GAAoBJ,IAAI,CAACK,OAAzB;AACA,eAAKC,SAAL,GAAiBJ,QAAjB;AACH;;AACDK,QAAAA,OAAO,GAAG;AAAA;;AACN,kCAAKD,SAAL,oEAAgBE,IAAhB,CAAqB,IAArB,EAA2B,KAAKP,KAAhC;AACH;;AAEDQ,QAAAA,OAAO,GAAG;AAAA;;AACN,cAAIC,KAAK,CAACC,MAAM,CAAC,KAAKhB,KAAL,CAAWS,MAAZ,CAAP,CAAT,EAAsC;AACtC,mCAAKd,SAAL,sEAAgBsB,cAAhB,CAA+B,IAAI1B,IAAJ,CAAS,KAAKI,SAAL,CAAeuB,WAAf,CAA2BC,KAApC,EAA2CH,MAAM,CAAC,KAAKhB,KAAL,CAAWS,MAAZ,CAAjD,CAA/B;AACH;;AAvB+B,O","sourcesContent":["\nimport { _decorator, Component, Node, Label, EditBox, Size } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Item')\nexport class Item extends Component {\n    @property(Label) label!: Label\n    @property(EditBox) input!: EditBox\n    private index!: number\n    private clickFunc!: Function\n    get transform() {\n        return this.node._uiProps.uiTransformComp\n    }\n    onLoad(){\n        this.input.placeholder = this.transform?.height.toString()!\n    }\n    show(data: any, index: number, callback: Function) {\n        this.index = index\n        this.label.string = data.message\n        this.clickFunc = callback\n    }\n    onClick() {\n        this.clickFunc?.call(this, this.index)\n    }\n\n    onInput() {\n        if (isNaN(Number(this.input.string))) return\n        this.transform?.setContentSize(new Size(this.transform.contentSize.width, Number(this.input.string)))\n    }\n}\n"]}