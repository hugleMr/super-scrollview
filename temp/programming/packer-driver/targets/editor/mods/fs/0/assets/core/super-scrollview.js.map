{"version":3,"sources":["file:///Users/stevejobs/Documents/GitHub/super-scrollview/assets/core/super-scrollview.ts"],"names":["_decorator","Vec3","Vec2","ScrollView","EventHandler","SuperLayout","ccclass","property","quintEaseOut","time","EPSILON","OUT_OF_BOUNDARY_BREAKING_FACTOR","SuperScrollview","displayName","tooltip","visible","pullRefresh","type","onLoad","layout","autoCenter","brake","_layout","content","getComponent","_getContentTopBoundary","_content","offset","isOfTopBoundary","_topBoundary","_getContentBottomBoundary","isOfButtomBoundary","_bottomBoundary","_getContentLeftBoundary","isOfLeftBoundary","_leftBoundary","_getContentRightBoundary","isOfRightBoundary","_rightBoundary","_onTouchBegan","event","captureListeners","isCallSoonFinish","autoScrolling","value","_autoScrolling","_processAutoScrolling","dt","isAutoScrollBrake","_isNecessaryAutoScrollBrake","brakingFactor","_autoScrollAccumulatedTime","percentage","Math","min","_autoScrollTotalTime","_autoScrollAttenuate","clonedAutoScrollTargetDelta","_autoScrollTargetDelta","clone","multiplyScalar","clonedAutoScrollStartPosition","_autoScrollStartPosition","add","reachedEnd","abs","fireEvent","getScrollEndedEventTiming","_isScrollEndedWithThresholdEventFired","_dispatchEvent","EventType","SCROLL_ENG_WITH_THRESHOLD","elastic","brakeOffsetPosition","subtract","_autoScrollBrakingStartPosition","set","moveDelta","getContentPosition","outOfBoundary","_getHowMuchOutOfBoundary","equals","ZERO","deltaMove","_clampDelta","vertical","y","x","_moveContent","SCROLLING","_isBouncing","_scrolling","SCROLL_ENDED","scrollToAny","timeInSecond","attenuated","_startAutoScroll","release","isMoveHeader","isMoveFooter","isLockHeader","isLockFooter","headerOutOffset","footerOutOffset","horizontal","clearProgress","startAutoScroll","_outOfBoundaryAmountDirty","_onTouchMoved","prevLocation","touch","getPreviousLocation","location","getLocation","headerProgress","headerMultiple","emitEvents","headerEvents","action","progress","stage","footerEvents","footerProgress","footerMultiple","_updateScrollBar","_autoScrollBraking","max"],"mappings":"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","sourcesContent":["/*\n * @Author: steveJobs\n * @Email: icipiqkm@gmail.com\n * @Date: 2021-8-1 01:15:04\n * @Last Modified by: steveJobs\n * @Last Modified time: 2021-8-1 14:35:43\n * @Description: 微信 icipiqkm\n */\nimport { _decorator, Node, EventTouch, Vec3, Vec2, ScrollView, EventHandler } from 'cc';\nimport { SuperLayout } from './super-layout';\nconst { ccclass, property } = _decorator;\nconst quintEaseOut = (time: number) => {\n    time -= 1;\n    return (time * time * time * time * time + 1);\n};\nconst EPSILON = 1e-4\nconst OUT_OF_BOUNDARY_BREAKING_FACTOR = 0.015\n@ccclass('SuperScrollview')\nexport class SuperScrollview extends ScrollView {\n    private _layout!: SuperLayout\n    @property pullRefresh: boolean = false\n    @property({\n        displayName: \"顶部偏移量\",\n        tooltip: \"下拉时超过此偏移会发送下拉事件\",\n        visible: function () { return (this as any).pullRefresh }\n    }) headerOutOffset: number = 200\n    @property({\n        displayName: \"满足触发Header的倍数\",\n        visible: function () { return (this as any).pullRefresh }\n    }) headerMultiple: number = 2\n    @property({\n        displayName: \"底部偏移量\",\n        tooltip: \"上拉时超过此偏移会发送上拉事件\",\n        visible: function () { return (this as any).pullRefresh }\n    }) footerOutOffset: number = 200\n    @property({\n        displayName: \"满足触发Footer的倍数\",\n        visible: function () { return (this as any).pullRefresh }\n    }) footerMultiple: number = 2\n    @property({\n        type: EventHandler,\n        visible: function () { return (this as any).pullRefresh }\n    }) headerEvents: EventHandler[] = []\n    @property({\n        type: EventHandler,\n        visible: function () { return (this as any).pullRefresh }\n    }) footerEvents: EventHandler[] = []\n    prevLocation: Vec2 = new Vec2()\n    location: Vec2 = new Vec2()\n    onLoad() {\n        if (this.layout.autoCenter) {\n            this.brake = 0.7\n        }\n    }\n    get layout() {\n        if (!this._layout) {\n            this._layout = this.content?.getComponent(SuperLayout)!\n        }\n        return this._layout\n    }\n    private isCallSoonFinish: boolean = false\n    protected _getContentTopBoundary() {\n        if (!this._content) {\n            return -1\n        }\n        let offset = this.layout.isOfTopBoundary == 0 ? this._topBoundary : this.layout.isOfTopBoundary\n        return offset\n    }\n    protected _getContentBottomBoundary() {\n        if (!this._content) {\n            return -1\n        }\n        let offset = this.layout.isOfButtomBoundary == 0 ? this._bottomBoundary : this.layout.isOfButtomBoundary\n        return offset\n    }\n    protected _getContentLeftBoundary() {\n        if (!this._content) {\n            return -1\n        }\n        let offset = this.layout.isOfLeftBoundary == 0 ? this._leftBoundary : this.layout.isOfLeftBoundary\n        return offset\n    }\n    protected _getContentRightBoundary() {\n        if (!this._content) {\n            return -1\n        }\n        let offset = this.layout.isOfRightBoundary == 0 ? this._rightBoundary : this.layout.isOfRightBoundary\n        return offset\n    }\n    protected _onTouchBegan(event: EventTouch, captureListeners?: Node[]) {\n        this.isCallSoonFinish = false\n        super._onTouchBegan(event, captureListeners)\n    }\n    set autoScrolling(value: boolean) {\n        this._autoScrolling = value\n    }\n    protected _processAutoScrolling(dt: number) {\n        const isAutoScrollBrake = this._isNecessaryAutoScrollBrake();\n        const brakingFactor = isAutoScrollBrake ? OUT_OF_BOUNDARY_BREAKING_FACTOR : 1;\n        this._autoScrollAccumulatedTime += dt * (1 / brakingFactor);\n        let percentage = Math.min(1, this._autoScrollAccumulatedTime / this._autoScrollTotalTime);\n        if (this._autoScrollAttenuate) {\n            percentage = quintEaseOut(percentage);\n        }\n        const clonedAutoScrollTargetDelta = this._autoScrollTargetDelta.clone();\n        clonedAutoScrollTargetDelta.multiplyScalar(percentage);\n        const clonedAutoScrollStartPosition = this._autoScrollStartPosition.clone();\n        clonedAutoScrollStartPosition.add(clonedAutoScrollTargetDelta);\n        let reachedEnd = Math.abs(percentage - 1) <= EPSILON;\n\n        const fireEvent = Math.abs(percentage - 1) <= this.getScrollEndedEventTiming();\n        if (fireEvent && !this._isScrollEndedWithThresholdEventFired) {\n            this._dispatchEvent(ScrollView.EventType.SCROLL_ENG_WITH_THRESHOLD);\n            this._isScrollEndedWithThresholdEventFired = true;\n        }\n        if (this.elastic) {\n            const brakeOffsetPosition = clonedAutoScrollStartPosition.clone();\n            brakeOffsetPosition.subtract(this._autoScrollBrakingStartPosition);\n            if (isAutoScrollBrake) {\n                brakeOffsetPosition.multiplyScalar(brakingFactor);\n            }\n            clonedAutoScrollStartPosition.set(this._autoScrollBrakingStartPosition);\n            clonedAutoScrollStartPosition.add(brakeOffsetPosition);\n        } else {\n            const moveDelta = clonedAutoScrollStartPosition.clone();\n            moveDelta.subtract(this.getContentPosition());\n            const outOfBoundary = this._getHowMuchOutOfBoundary(moveDelta);\n            if (!outOfBoundary.equals(Vec3.ZERO, EPSILON)) {\n                clonedAutoScrollStartPosition.add(outOfBoundary);\n                reachedEnd = true;\n            }\n        }\n        if (reachedEnd) {\n            this._autoScrolling = false;\n        }\n        const deltaMove = clonedAutoScrollStartPosition.clone();\n        deltaMove.subtract(this.getContentPosition());\n        this._clampDelta(deltaMove);\n        /** 重写这个方法的主要原因是增加以下逻辑  功能用于自动居中 */\n        if (this.layout.vertical && Math.abs(deltaMove.y) <= 2 && !this.isCallSoonFinish) {\n            this.layout[\"soonFinish\"]()\n            this.isCallSoonFinish = true\n        } else if (!this.layout.vertical && Math.abs(deltaMove.x) <= 2 && !this.isCallSoonFinish) {\n            this.layout[\"soonFinish\"]()\n            this.isCallSoonFinish = true\n        }\n        this._moveContent(deltaMove, reachedEnd);\n        this._dispatchEvent(ScrollView.EventType.SCROLLING);\n        if (!this._autoScrolling) {\n            this._isBouncing = false;\n            this._scrolling = false;\n            this._dispatchEvent(ScrollView.EventType.SCROLL_ENDED);\n        }\n    }\n    scrollToAny(moveDelta: Vec3, timeInSecond?: number, attenuated = true) {\n        if (timeInSecond) {\n            this._startAutoScroll(moveDelta, timeInSecond, attenuated !== false);\n        } else {\n            this._moveContent(moveDelta);\n        }\n    }\n    release() {\n        this.isMoveHeader = false\n        this.isMoveFooter = false\n        if (this.isLockHeader || this.isLockFooter) {\n            this.vertical && this.isLockHeader && (this._topBoundary += this.headerOutOffset)\n            this.vertical && this.isLockFooter && (this._bottomBoundary -= this.footerOutOffset)\n            this.horizontal && this.isLockHeader && (this._leftBoundary -= this.headerOutOffset)\n            this.horizontal && this.isLockFooter && (this._rightBoundary += this.footerOutOffset)\n            this.clearProgress()\n            this.layout[\"onPositionChanged\"]()\n            this.isLockHeader = false\n            this.isLockFooter = false\n            this.startAutoScroll()\n        }\n    }\n    startAutoScroll() {\n        this._autoScrolling = true\n        this._outOfBoundaryAmountDirty = true\n    }\n    private isMoveHeader: boolean = false\n    private isMoveFooter: boolean = false\n    private isLockHeader: boolean = false\n    private isLockFooter: boolean = false\n    private headerProgress: number = 0\n    private footerProgress: number = 0\n    protected _onTouchMoved(event: EventTouch, captureListeners: any) {\n        this.prevLocation = event.touch?.getPreviousLocation()!\n        this.location = event.touch?.getLocation()!\n        super._onTouchMoved(event, captureListeners)\n        if (this.pullRefresh) {\n            let outOfBoundary = this._getHowMuchOutOfBoundary()\n            let offset = this.vertical ? outOfBoundary.y : -outOfBoundary.x\n            if (offset > 0 && !this.isLockHeader && !this.isLockFooter) {\n                this.headerProgress = offset < EPSILON ? 0 : offset / this.headerOutOffset\n                this.isMoveHeader = this.headerProgress >= this.headerMultiple\n                EventHandler.emitEvents(this.headerEvents, this, { action: false, progress: this.headerProgress, stage: this.isMoveHeader ? \"wait\" : \"touch\" })\n                EventHandler.emitEvents(this.footerEvents, this, { action: false, progress: 0, stage: \"release\" })\n            } else if (offset < 0 && !this.isLockHeader && !this.isLockFooter) {\n                this.footerProgress = -offset < EPSILON ? 0 : -offset / this.footerOutOffset\n                this.isMoveFooter = this.footerProgress >= this.footerMultiple\n                EventHandler.emitEvents(this.footerEvents, this, { action: false, progress: this.footerProgress, stage: this.isMoveFooter ? \"wait\" : \"touch\" })\n                EventHandler.emitEvents(this.headerEvents, this, { action: false, progress: 0, stage: \"release\" })\n            } else if (offset == 0 && !this.isLockHeader && !this.isLockFooter) {\n                this.clearProgress()\n            }\n        }\n    }\n    protected _startAutoScroll(deltaMove: any, timeInSecond: any, attenuated: any) {\n        if (this.pullRefresh) {  // 如果没有刷新/加载的监听者 则不计算 \n            if (this.isMoveHeader && !this.isLockHeader) {\n                if (this.vertical) {\n                    this._topBoundary -= this.headerOutOffset\n                    deltaMove.y -= this.headerOutOffset\n                }\n                if (this.horizontal) {\n                    this._leftBoundary += this.headerOutOffset\n                    deltaMove.x += this.headerOutOffset\n                }\n                this.isLockHeader = true\n                EventHandler.emitEvents(this.headerEvents, this, { action: true, progress: this.headerProgress, stage: 'lock' })\n            } else if (this.isMoveFooter && !this.isLockFooter) {\n                if (this.vertical) {\n                    this._bottomBoundary += this.footerOutOffset\n                    deltaMove.y += this.footerOutOffset\n                }\n                if (this.horizontal) {\n                    this._rightBoundary -= this.footerOutOffset\n                    deltaMove.x -= this.footerOutOffset\n                }\n                this.isLockFooter = true\n                EventHandler.emitEvents(this.footerEvents, this, { action: true, progress: this.footerProgress, stage: 'lock' })\n            }\n        }\n        super._startAutoScroll(deltaMove, timeInSecond, attenuated)\n    }\n    protected _updateScrollBar(outOfBoundary: any) {\n        super._updateScrollBar(outOfBoundary)\n        if (this._autoScrollBraking) return // 自动回弹时不计算 （非手动）\n        if (!this._autoScrolling) return // 非自动滚动时不计算 \n        if (!this.pullRefresh) return\n        let offset = this.vertical ? outOfBoundary.y : -outOfBoundary.x\n        if (offset > 0) { // 下滑\n            let progress = offset < EPSILON ? 0 : offset / this.headerOutOffset //根据参数 headerOutOffset 计算当前下滑的办百分比\n            if (this.isLockHeader) {\n                this.headerProgress = this.headerProgress == 1 ? this.headerProgress : Math.max(progress, 1)\n                EventHandler.emitEvents(this.headerEvents, this, { action: false, progress: this.headerProgress, stage: \"lock\" })\n            } else {\n                this.headerProgress = progress < this.headerProgress ? progress : this.headerProgress\n                EventHandler.emitEvents(this.headerEvents, this, { action: false, progress: this.headerProgress, stage: \"release\" })\n            }\n        } else if (offset < 0) {\n            let progress = -offset < EPSILON ? 0 : -offset / this.footerOutOffset  //根据参数 footerOutOffset 计算当前下滑的办百分比\n            if (this.isLockFooter) {\n                this.footerProgress = this.footerProgress == 1 ? this.footerProgress : Math.max(progress, 1)\n                EventHandler.emitEvents(this.footerEvents, this, { action: false, progress: this.footerProgress, stage: \"lock\" })\n            } else {\n                this.footerProgress = progress < this.footerProgress ? progress : this.footerProgress\n                EventHandler.emitEvents(this.footerEvents, this, { action: false, progress: this.footerProgress, stage: \"release\" })\n            }\n        } else if (offset == 0) {\n            // 正常滑动时 如果没有锁定头和尾时 释放所有进度\n            if (!this.isLockHeader && !this.isLockFooter) {\n                this.clearProgress()\n            }\n        }\n    }\n    private clearProgress() {\n        EventHandler.emitEvents(this.headerEvents, this, { action: false, progress: 0, stage: \"release\" })\n        EventHandler.emitEvents(this.footerEvents, this, { action: false, progress: 0, stage: \"release\" })\n    }\n}\n"]}