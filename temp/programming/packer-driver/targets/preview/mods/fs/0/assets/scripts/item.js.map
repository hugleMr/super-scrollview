{"version":3,"sources":["file:///Users/stevejobs/Documents/GitHub/super-scrollview/assets/scripts/item.ts"],"names":["_decorator","Component","Label","EditBox","Size","ccclass","property","Item","onLoad","input","placeholder","transform","height","toString","show","data","index","callback","label","string","message","clickFunc","onClick","call","onInput","isNaN","Number","setContentSize","contentSize","width","node","_uiProps","uiTransformComp"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,O,OAAAA,O;AAASC,MAAAA,I,OAAAA,I;;;;;;;AAC9CC,MAAAA,O,GAAsBL,U,CAAtBK,O;AAASC,MAAAA,Q,GAAaN,U,CAAbM,Q;;sBAGJC,I,WADZF,OAAO,CAAC,MAAD,C,UAEHC,QAAQ,CAACJ,KAAD,C,UACRI,QAAQ,CAACH,OAAD,C;;;;;;;;;;;;;;;;;;;;;eAMTK,M,GAAA,kBAAQ;AAAA;;AACJ,eAAKC,KAAL,CAAWC,WAAX,sBAAyB,KAAKC,SAA9B,oDAAyB,gBAAgBC,MAAhB,CAAuBC,QAAvB,EAAzB;AACH,S;;eACDC,I,GAAA,cAAKC,IAAL,EAAgBC,KAAhB,EAA+BC,QAA/B,EAAmD;AAC/C,eAAKD,KAAL,GAAaA,KAAb;AACA,eAAKE,KAAL,CAAWC,MAAX,GAAoBJ,IAAI,CAACK,OAAzB;AACA,eAAKC,SAAL,GAAiBJ,QAAjB;AACH,S;;eACDK,O,GAAA,mBAAU;AAAA;;AACN,kCAAKD,SAAL,oEAAgBE,IAAhB,CAAqB,IAArB,EAA2B,KAAKP,KAAhC;AACH,S;;eAEDQ,O,GAAA,mBAAU;AAAA;;AACN,cAAIC,KAAK,CAACC,MAAM,CAAC,KAAKjB,KAAL,CAAWU,MAAZ,CAAP,CAAT,EAAsC;AACtC,mCAAKR,SAAL,sEAAgBgB,cAAhB,CAA+B,IAAIvB,IAAJ,CAAS,KAAKO,SAAL,CAAeiB,WAAf,CAA2BC,KAApC,EAA2CH,MAAM,CAAC,KAAKjB,KAAL,CAAWU,MAAZ,CAAjD,CAA/B;AACH,S;;;;eAlBD,eAAgB;AACZ,mBAAO,KAAKW,IAAL,CAAUC,QAAV,CAAmBC,eAA1B;AACH;;;;QAPqB/B,S","sourcesContent":["\nimport { _decorator, Component, Node, Label, EditBox, Size } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Item')\nexport class Item extends Component {\n    @property(Label) label!: Label\n    @property(EditBox) input!: EditBox\n    private index!: number\n    private clickFunc!: Function\n    get transform() {\n        return this.node._uiProps.uiTransformComp\n    }\n    onLoad(){\n        this.input.placeholder = this.transform?.height.toString()!\n    }\n    show(data: any, index: number, callback: Function) {\n        this.index = index\n        this.label.string = data.message\n        this.clickFunc = callback\n    }\n    onClick() {\n        this.clickFunc?.call(this, this.index)\n    }\n\n    onInput() {\n        if (isNaN(Number(this.input.string))) return\n        this.transform?.setContentSize(new Size(this.transform.contentSize.width, Number(this.input.string)))\n    }\n}\n"]}